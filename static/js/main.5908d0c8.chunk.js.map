{"version":3,"sources":["components/Display.js","components/Keyboard.js","App.js","index.js"],"names":["Display","history","result","className","Keyboard","handleClick","numButtons","map","btnValue","onClick","funButtons","App","useState","prevNumber","setPrevNumber","currentNumber","setCurrentNumber","setResult","operation","setOperation","nextOperator","setNextOperator","setHistory","useEffect","toString","handleFunButtons","handleNumButtons","number","includes","newCurrentNumber","key","calculate","parseFloat","firstNumber","secondNumber","isNaN","res","fixedRes","toFixed","handleAllClear","handleClear","val","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5908d0c8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Display = ({ history, result }) => {\n  return (\n    <div className=\"display-container\">\n      <div className=\"display-wrapper\">\n        <div className=\"display-history\">\n          <p>{history}</p>\n        </div>\n        <div className=\"display-result\">\n          <h3>{result}</h3>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\n\nexport const Keyboard = ({ handleClick }) => {\n  const numButtons = [7, 8, 9, 4, 5, 6, 1, 2, 3, 0, \".\"].map((btnValue) => {\n    return (\n      <div\n        key={btnValue}\n        onClick={() => {\n          handleClick(btnValue);\n        }}\n        className={\n          btnValue === 0 ? \"keyboard-btns-num-zero\" : \"keyboard-btns-num\"\n        }\n      >\n        {btnValue}\n      </div>\n    );\n  });\n\n  const funButtons = [\"C\", \"CE\", \"×\", \"÷\", \"-\", \"+\", \"=\"].map((btnValue) => {\n    return (\n      <div\n        key={btnValue}\n        onClick={() => {\n          handleClick(btnValue);\n        }}\n        className={\n          btnValue === \"=\" ? \"keyboard-btns-fun-equals\" : \"keyboard-btns-fun\"\n        }\n      >\n        {btnValue}\n      </div>\n    );\n  });\n  return (\n    <div className=\"keyboard-container\">\n      <div className=\"keyboard-btns-num-constainer\">{numButtons}</div>\n      <div className=\"keyboard-btns-fun-constainer\">{funButtons}</div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Display } from \"./components/Display\";\nimport { Keyboard } from \"./components/Keyboard\";\n\nconst App = () => {\n  const [prevNumber, setPrevNumber] = useState(null);\n  const [currentNumber, setCurrentNumber] = useState(\"\");\n  const [result, setResult] = useState(0);\n  const [operation, setOperation] = useState(\"\");\n  const [nextOperator, setNextOperator] = useState(\"\");\n  let [history, setHistory] = useState(\"\");\n\n  useEffect(() => {\n    if (nextOperator && nextOperator !== \"=\") {\n      setHistory(`${history} ${prevNumber.toString()}${nextOperator}`);\n      handleFunButtons(nextOperator);\n    }\n  }, [history, nextOperator, prevNumber]);\n\n  const handleClick = (val) => {\n    if (val === \"CE\") return handleAllClear();\n    if (val === \"C\") return handleClear();\n    if (isNaN(val) && val !== \".\") {\n      if (!prevNumber && !currentNumber) return;\n      return handleFunButtons(val);\n    } else {\n      return handleNumButtons(val);\n    }\n  };\n\n  const handleNumButtons = (number) => {\n    if (number === \".\" && currentNumber.includes(\".\")) return;\n    if (prevNumber && !operation) {\n      setPrevNumber(null);\n      setHistory(`${history} | `);\n    }\n    const newCurrentNumber = currentNumber + number.toString();\n    setCurrentNumber(newCurrentNumber);\n    setResult(newCurrentNumber);\n    setHistory(`${(history += number)}`);\n  };\n\n  const handleFunButtons = (key) => {\n    setOperation(key);\n    if (nextOperator) setNextOperator(\"\");\n    if (prevNumber !== null && currentNumber !== \"\") {\n      setNextOperator(key);\n      return calculate();\n    }\n    prevNumber !== null\n      ? parseFloat(currentNumber)\n      : setPrevNumber(currentNumber);\n    setCurrentNumber(\"\");\n    setHistory(`${(history += key)}`);\n  };\n\n  const calculate = () => {\n    const firstNumber = parseFloat(prevNumber);\n    const secondNumber = parseFloat(currentNumber);\n    if (isNaN(firstNumber) || isNaN(secondNumber)) return;\n    let res = 0;\n    switch (operation) {\n      case \"+\":\n        res = firstNumber + secondNumber;\n        break;\n      case \"-\":\n        res = firstNumber - secondNumber;\n        break;\n      case \"×\":\n        res = firstNumber * secondNumber;\n        break;\n      case \"÷\":\n        res = firstNumber / secondNumber;\n        break;\n      default:\n        return;\n    }\n    const fixedRes = parseFloat(res.toFixed(8));\n    setPrevNumber(fixedRes);\n    setCurrentNumber(\"\");\n    setResult(fixedRes);\n    setOperation(\"\");\n    setHistory(`${history}=${fixedRes.toString()}`);\n  };\n\n  const handleAllClear = () => {\n    setPrevNumber(null);\n    setCurrentNumber(\"\");\n    setHistory(\"\");\n    setResult(0);\n    setOperation(\"\");\n    setNextOperator(\"\");\n  };\n\n  const handleClear = () => {\n    setPrevNumber(null);\n    setCurrentNumber(\"\");\n    setResult(0);\n    setOperation(\"\");\n    setNextOperator(\"\");\n  };\n\n  return (\n    <div className=\"calculator-container\">\n      <Display result={result} history={history} setResult={setResult} />\n      <Keyboard\n        handleFunButtons={handleFunButtons}\n        handleNumButtons={handleNumButtons}\n        handleClick={handleClick}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}